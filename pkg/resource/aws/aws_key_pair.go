// GENERATED, DO NOT EDIT THIS FILE
package aws

import (
	"github.com/zclconf/go-cty/cty"

	"github.com/cloudskiff/driftctl/pkg/dctlcty"
)

const AwsKeyPairResourceType = "aws_key_pair"

type AwsKeyPair struct {
	Arn           *string           `cty:"arn" computed:"true"`
	Fingerprint   *string           `cty:"fingerprint" computed:"true"`
	Id            string            `cty:"id" computed:"true"`
	KeyName       *string           `cty:"key_name" computed:"true"`
	KeyNamePrefix *string           `cty:"key_name_prefix" diff:"-"`
	KeyPairId     *string           `cty:"key_pair_id" computed:"true"`
	PublicKey     *string           `cty:"public_key" diff:"-"`
	Tags          map[string]string `cty:"tags"`
	CtyVal        *cty.Value        `diff:"-"`
}

func (r *AwsKeyPair) TerraformId() string {
	return r.Id
}

func (r *AwsKeyPair) TerraformType() string {
	return AwsKeyPairResourceType
}

func (r *AwsKeyPair) CtyValue() *cty.Value {
	return r.CtyVal
}

func initAwsKeyPairMetaData() {
	dctlcty.SetMetadata(AwsKeyPairResourceType, AwsKeyPairTags, AwsKeyPairNormalizer)
}

var AwsKeyPairTags = map[string]string{
	"arn":         `computed:"true"`,
	"fingerprint": `computed:"true"`,
	"id":          `computed:"true"`,
	"key_name":    `computed:"true"`,
	"key_pair_id": `computed:"true"`,
}

func AwsKeyPairNormalizer(val *rescty.CtyAttributes) {
	val.SafeDelete([]string{"key_name_prefix"})
	val.SafeDelete([]string{"public_key"})
}
