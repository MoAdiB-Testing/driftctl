// GENERATED, DO NOT EDIT THIS FILE
package aws

import (
	"github.com/zclconf/go-cty/cty"

	"github.com/cloudskiff/driftctl/pkg/dctlcty"
)

const AwsIamRoleResourceType = "aws_iam_role"

type AwsIamRole struct {
	Arn                 *string           `cty:"arn" computed:"true"`
	AssumeRolePolicy    *string           `cty:"assume_role_policy" jsonstring:"true"`
	CreateDate          *string           `cty:"create_date" computed:"true"`
	Description         *string           `cty:"description"`
	ForceDetachPolicies *bool             `cty:"force_detach_policies" diff:"-"`
	Id                  string            `cty:"id" computed:"true"`
	MaxSessionDuration  *int              `cty:"max_session_duration"`
	Name                *string           `cty:"name" computed:"true"`
	NamePrefix          *string           `cty:"name_prefix"`
	Path                *string           `cty:"path"`
	PermissionsBoundary *string           `cty:"permissions_boundary"`
	Tags                map[string]string `cty:"tags"`
	UniqueId            *string           `cty:"unique_id" computed:"true"`
	CtyVal              *cty.Value        `diff:"-"`
}

func (r *AwsIamRole) TerraformId() string {
	return r.Id
}

func (r *AwsIamRole) TerraformType() string {
	return AwsIamRoleResourceType
}

func (r *AwsIamRole) CtyValue() *cty.Value {
	return r.CtyVal
}

func initAwsIamRoleMetaData() {
	dctlcty.SetMetadata(AwsIamRoleResourceType, AwsIamRoleTags, AwsIamRoleNormalizer)
}

var AwsIamRoleTags = map[string]string{
	"arn":                `computed:"true"`,
	"assume_role_policy": `jsonstring:"true"`,
	"create_date":        `computed:"true"`,
	"id":                 `computed:"true"`,
	"name":               `computed:"true"`,
	"unique_id":          `computed:"true"`,
}

func AwsIamRoleNormalizer(val *rescty.CtyAttributes) {
	val.SafeDelete([]string{"force_detach_policies"})
}
