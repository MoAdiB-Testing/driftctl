// GENERATED, DO NOT EDIT THIS FILE
package aws

import (
	"github.com/cloudskiff/driftctl/pkg/resource"
	rescty "github.com/cloudskiff/driftctl/pkg/resource/cty"
	"github.com/zclconf/go-cty/cty"
)

const AwsS3BucketNotificationResourceType = "aws_s3_bucket_notification"

type AwsS3BucketNotification struct {
	Bucket         *string `cty:"bucket" diff:"-"`
	Id             string  `cty:"id" diff:"-" computed:"true"`
	LambdaFunction *[]struct {
		Events            []string `cty:"events"`
		FilterPrefix      *string  `cty:"filter_prefix"`
		FilterSuffix      *string  `cty:"filter_suffix"`
		Id                string   `cty:"id" computed:"true"`
		LambdaFunctionArn *string  `cty:"lambda_function_arn"`
	} `cty:"lambda_function"`
	Queue *[]struct {
		Events       []string `cty:"events"`
		FilterPrefix *string  `cty:"filter_prefix"`
		FilterSuffix *string  `cty:"filter_suffix"`
		Id           string   `cty:"id" computed:"true"`
		QueueArn     *string  `cty:"queue_arn"`
	} `cty:"queue"`
	Topic *[]struct {
		Events       []string `cty:"events"`
		FilterPrefix *string  `cty:"filter_prefix"`
		FilterSuffix *string  `cty:"filter_suffix"`
		Id           string   `cty:"id" computed:"true"`
		TopicArn     *string  `cty:"topic_arn"`
	} `cty:"topic"`
	CtyVal *cty.Value `diff:"-"`
}

func (r *AwsS3BucketNotification) TerraformId() string {
	return r.Id
}

func (r *AwsS3BucketNotification) TerraformType() string {
	return AwsS3BucketNotificationResourceType
}

func (r *AwsS3BucketNotification) CtyValue() *cty.Value {
	return r.CtyVal
}

func initAwsS3BucketNotificationMetaData(resourceSchemaRepository *resource.SchemaRepository) {
	resourceSchemaRepository.SetNormalizeFunc(AwsS3BucketNotificationResourceType, func(val *rescty.CtyAttributes) {
		val.SafeDelete([]string{"id"})
		val.SafeDelete([]string{"bucket"})
	})
}
