// GENERATED, DO NOT EDIT THIS FILE
package aws

import (
	"github.com/zclconf/go-cty/cty"

	"github.com/cloudskiff/driftctl/pkg/dctlcty"
)

const AwsDefaultVpcResourceType = "aws_default_vpc"

type AwsDefaultVpc struct {
	Arn                          *string           `cty:"arn" computed:"true"`
	AssignGeneratedIpv6CidrBlock *bool             `cty:"assign_generated_ipv6_cidr_block" computed:"true"`
	CidrBlock                    *string           `cty:"cidr_block" computed:"true"`
	DefaultNetworkAclId          *string           `cty:"default_network_acl_id" computed:"true"`
	DefaultRouteTableId          *string           `cty:"default_route_table_id" computed:"true"`
	DefaultSecurityGroupId       *string           `cty:"default_security_group_id" computed:"true"`
	DhcpOptionsId                *string           `cty:"dhcp_options_id" computed:"true"`
	EnableClassiclink            *bool             `cty:"enable_classiclink" computed:"true"`
	EnableClassiclinkDnsSupport  *bool             `cty:"enable_classiclink_dns_support" computed:"true"`
	EnableDnsHostnames           *bool             `cty:"enable_dns_hostnames" computed:"true"`
	EnableDnsSupport             *bool             `cty:"enable_dns_support"`
	Id                           string            `cty:"id" computed:"true"`
	InstanceTenancy              *string           `cty:"instance_tenancy" computed:"true"`
	Ipv6AssociationId            *string           `cty:"ipv6_association_id" computed:"true"`
	Ipv6CidrBlock                *string           `cty:"ipv6_cidr_block" computed:"true"`
	MainRouteTableId             *string           `cty:"main_route_table_id" computed:"true"`
	OwnerId                      *string           `cty:"owner_id" computed:"true"`
	Tags                         map[string]string `cty:"tags"`
	CtyVal                       *cty.Value        `diff:"-"`
}

func (r *AwsDefaultVpc) TerraformId() string {
	return r.Id
}

func (r *AwsDefaultVpc) TerraformType() string {
	return AwsDefaultVpcResourceType
}

func (r *AwsDefaultVpc) CtyValue() *cty.Value {
	return r.CtyVal
}

func initAwsDefaultVpcMetaData() {
	dctlcty.SetMetadata(AwsDefaultVpcResourceType, AwsDefaultVpcTags, AwsDefaultVpcNormalizer)
}

var AwsDefaultVpcTags = map[string]string{
	"arn":                              `computed:"true"`,
	"assign_generated_ipv6_cidr_block": `computed:"true"`,
	"cidr_block":                       `computed:"true"`,
	"default_network_acl_id":           `computed:"true"`,
	"default_route_table_id":           `computed:"true"`,
	"default_security_group_id":        `computed:"true"`,
	"dhcp_options_id":                  `computed:"true"`,
	"enable_classiclink":               `computed:"true"`,
	"enable_classiclink_dns_support":   `computed:"true"`,
	"enable_dns_hostnames":             `computed:"true"`,
	"id":                               `computed:"true"`,
	"instance_tenancy":                 `computed:"true"`,
	"ipv6_association_id":              `computed:"true"`,
	"ipv6_cidr_block":                  `computed:"true"`,
	"main_route_table_id":              `computed:"true"`,
	"owner_id":                         `computed:"true"`,
}

func AwsDefaultVpcNormalizer(val *dctlcty.CtyAttributes) {
}
