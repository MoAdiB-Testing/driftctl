// GENERATED, DO NOT EDIT THIS FILE
package aws

import (
	"github.com/cloudskiff/driftctl/pkg/resource"
	rescty "github.com/cloudskiff/driftctl/pkg/resource/cty"
	"github.com/zclconf/go-cty/cty"
)

const AwsEbsVolumeResourceType = "aws_ebs_volume"

type AwsEbsVolume struct {
	Arn                *string           `cty:"arn" diff:"-" computed:"true"`
	AvailabilityZone   *string           `cty:"availability_zone"`
	Encrypted          *bool             `cty:"encrypted" computed:"true"`
	Id                 string            `cty:"id" computed:"true"`
	Iops               *int              `cty:"iops" computed:"true"`
	KmsKeyId           *string           `cty:"kms_key_id" computed:"true"`
	MultiAttachEnabled *bool             `cty:"multi_attach_enabled"`
	OutpostArn         *string           `cty:"outpost_arn" diff:"-"`
	Size               *int              `cty:"size" computed:"true"`
	SnapshotId         *string           `cty:"snapshot_id" diff:"-" computed:"true"`
	Tags               map[string]string `cty:"tags"`
	Type               *string           `cty:"type" computed:"true"`
	CtyVal             *cty.Value        `cty:"-" diff:"-"`
}

func (r *AwsEbsVolume) TerraformId() string {
	return r.Id
}

func (r *AwsEbsVolume) TerraformType() string {
	return AwsEbsVolumeResourceType
}

func (r *AwsEbsVolume) CtyValue() *cty.Value {
	return r.CtyVal
}

func initAwsEbsVolumeMetaData(resourceSchemaRepository *resource.SchemaRepository) {
	resourceSchemaRepository.SetNormalizeFunc(AwsEbsVolumeResourceType, func(val *rescty.CtyAttributes) {
		val.SafeDelete([]string{"arn"})
		val.SafeDelete([]string{"outpost_arn"})
		val.SafeDelete([]string{"snapshot_id"})
	})
}
